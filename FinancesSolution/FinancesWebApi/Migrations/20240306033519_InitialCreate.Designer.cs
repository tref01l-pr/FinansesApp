// <auto-generated />
using System;
using FinancesWebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinancesWebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240306033519_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinancesWebApi.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("FinancesWebApi.Models.CountryPhoneNumber", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DialCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mask")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("CountryPhoneNumbers");
                });

            modelBuilder.Entity("FinancesWebApi.Models.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExpenseCategoryId")
                        .HasColumnType("int");

                    b.Property<bool?>("ExpenseCategoryIsDefault")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("ExpenseCategoryId", "ExpenseCategoryIsDefault");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("FinancesWebApi.Models.ExpenseCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<int>("ExpenseIconId")
                        .HasColumnType("int");

                    b.Property<int>("IconColorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("PannedOutlayAmount")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseIconId");

                    b.HasIndex("IconColorId");

                    b.ToTable("ExpenseCategories");
                });

            modelBuilder.Entity("FinancesWebApi.Models.ExpenseIcon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IconCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IconCategoryId");

                    b.ToTable("ExpenseIcons");
                });

            modelBuilder.Entity("FinancesWebApi.Models.IconCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IconCategories");
                });

            modelBuilder.Entity("FinancesWebApi.Models.IconColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IconColors");
                });

            modelBuilder.Entity("FinancesWebApi.Models.Income", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("IncomeCategoryId")
                        .HasColumnType("int");

                    b.Property<bool?>("IncomeCategoryIsDefault")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("IncomeCategoryId", "IncomeCategoryIsDefault");

                    b.ToTable("Incomes");
                });

            modelBuilder.Entity("FinancesWebApi.Models.IncomeCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<int>("IconColorId")
                        .HasColumnType("int");

                    b.Property<int>("IncomeIconId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("PannedOutlayAmount")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("IconColorId");

                    b.HasIndex("IncomeIconId");

                    b.ToTable("IncomeCategories");
                });

            modelBuilder.Entity("FinancesWebApi.Models.IncomeIcon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IconCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IconCategoryId");

                    b.ToTable("IncomeIcons");
                });

            modelBuilder.Entity("FinancesWebApi.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("FinancesWebApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfPasswordAttempts")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("PhoneNumberId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FinancesWebApi.Models.UserPhoneNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryCode");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserPhoneNumbers");
                });

            modelBuilder.Entity("FinancesWebApi.Models.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("FinancesWebApi.Models.UserSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfRegistration")
                        .HasColumnType("datetime2");

                    b.Property<string>("DecimalSeparator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DefaultAccountId")
                        .HasColumnType("int");

                    b.Property<string>("FirstDayOfWeek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NoRounding")
                        .HasColumnType("bit");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DefaultAccountId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserSettings");
                });

            modelBuilder.Entity("FinancesWebApi.Models.Account", b =>
                {
                    b.HasOne("FinancesWebApi.Models.User", "User")
                        .WithMany("Accounts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinancesWebApi.Models.Expense", b =>
                {
                    b.HasOne("FinancesWebApi.Models.Account", "Account")
                        .WithMany("Expenses")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinancesWebApi.Models.ExpenseCategory", "ExpenseCategory")
                        .WithMany("Expenses")
                        .HasForeignKey("ExpenseCategoryId", "ExpenseCategoryIsDefault")
                        .HasPrincipalKey("Id", "IsDefault")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Account");

                    b.Navigation("ExpenseCategory");
                });

            modelBuilder.Entity("FinancesWebApi.Models.ExpenseCategory", b =>
                {
                    b.HasOne("FinancesWebApi.Models.ExpenseIcon", "ExpenseIcon")
                        .WithMany("ExpenseCategories")
                        .HasForeignKey("ExpenseIconId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinancesWebApi.Models.IconColor", "IconColor")
                        .WithMany("ExpenseCategories")
                        .HasForeignKey("IconColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExpenseIcon");

                    b.Navigation("IconColor");
                });

            modelBuilder.Entity("FinancesWebApi.Models.ExpenseIcon", b =>
                {
                    b.HasOne("FinancesWebApi.Models.IconCategory", "IconCategory")
                        .WithMany()
                        .HasForeignKey("IconCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IconCategory");
                });

            modelBuilder.Entity("FinancesWebApi.Models.Income", b =>
                {
                    b.HasOne("FinancesWebApi.Models.Account", "Account")
                        .WithMany("Incomes")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinancesWebApi.Models.IncomeCategory", "IncomeCategory")
                        .WithMany("Incomes")
                        .HasForeignKey("IncomeCategoryId", "IncomeCategoryIsDefault")
                        .HasPrincipalKey("Id", "IsDefault")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Account");

                    b.Navigation("IncomeCategory");
                });

            modelBuilder.Entity("FinancesWebApi.Models.IncomeCategory", b =>
                {
                    b.HasOne("FinancesWebApi.Models.IconColor", "IconColor")
                        .WithMany("IncomeCategories")
                        .HasForeignKey("IconColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinancesWebApi.Models.IncomeIcon", "IncomeIcon")
                        .WithMany("IncomeCategories")
                        .HasForeignKey("IncomeIconId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IconColor");

                    b.Navigation("IncomeIcon");
                });

            modelBuilder.Entity("FinancesWebApi.Models.IncomeIcon", b =>
                {
                    b.HasOne("FinancesWebApi.Models.IconCategory", "IconCategory")
                        .WithMany("IncomeIcons")
                        .HasForeignKey("IconCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IconCategory");
                });

            modelBuilder.Entity("FinancesWebApi.Models.UserPhoneNumber", b =>
                {
                    b.HasOne("FinancesWebApi.Models.CountryPhoneNumber", "CountryPhoneNumber")
                        .WithMany("UserPhoneNumbers")
                        .HasForeignKey("CountryCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinancesWebApi.Models.User", "User")
                        .WithOne("UserPhoneNumber")
                        .HasForeignKey("FinancesWebApi.Models.UserPhoneNumber", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CountryPhoneNumber");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinancesWebApi.Models.UserRole", b =>
                {
                    b.HasOne("FinancesWebApi.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinancesWebApi.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinancesWebApi.Models.UserSettings", b =>
                {
                    b.HasOne("FinancesWebApi.Models.Account", "DefaultAccount")
                        .WithMany()
                        .HasForeignKey("DefaultAccountId");

                    b.HasOne("FinancesWebApi.Models.User", "User")
                        .WithOne("UserSettings")
                        .HasForeignKey("FinancesWebApi.Models.UserSettings", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DefaultAccount");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinancesWebApi.Models.Account", b =>
                {
                    b.Navigation("Expenses");

                    b.Navigation("Incomes");
                });

            modelBuilder.Entity("FinancesWebApi.Models.CountryPhoneNumber", b =>
                {
                    b.Navigation("UserPhoneNumbers");
                });

            modelBuilder.Entity("FinancesWebApi.Models.ExpenseCategory", b =>
                {
                    b.Navigation("Expenses");
                });

            modelBuilder.Entity("FinancesWebApi.Models.ExpenseIcon", b =>
                {
                    b.Navigation("ExpenseCategories");
                });

            modelBuilder.Entity("FinancesWebApi.Models.IconCategory", b =>
                {
                    b.Navigation("IncomeIcons");
                });

            modelBuilder.Entity("FinancesWebApi.Models.IconColor", b =>
                {
                    b.Navigation("ExpenseCategories");

                    b.Navigation("IncomeCategories");
                });

            modelBuilder.Entity("FinancesWebApi.Models.IncomeCategory", b =>
                {
                    b.Navigation("Incomes");
                });

            modelBuilder.Entity("FinancesWebApi.Models.IncomeIcon", b =>
                {
                    b.Navigation("IncomeCategories");
                });

            modelBuilder.Entity("FinancesWebApi.Models.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("FinancesWebApi.Models.User", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("UserPhoneNumber")
                        .IsRequired();

                    b.Navigation("UserRoles");

                    b.Navigation("UserSettings")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
